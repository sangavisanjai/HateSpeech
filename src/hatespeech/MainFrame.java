/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package hatespeech;

import java.util.ArrayList;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import twitter4j.Query;
import twitter4j.QueryResult;
import twitter4j.Status;
import twitter4j.Twitter;
import twitter4j.TwitterFactory;

/**
 *
 * @author SEABIRDS-PC
 */
public class MainFrame extends javax.swing.JFrame {

    /**
     * Creates new form MainFrame
     */
    
    public static ArrayList alltweets=new ArrayList();
    
    public MainFrame() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(0, 102, 51));

        jLabel1.setFont(new java.awt.Font("Algerian", 0, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Main Frame");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(353, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(344, 344, 344))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1))
        );

        jButton1.setText("Data Collection & Annotation");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        jButton2.setText("Preprocessing");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, 845, Short.MAX_VALUE)
                    .addComponent(jScrollPane1)
                    .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 280, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(19, 19, 19))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:

        Preprocessing mf=new Preprocessing();
        mf.setTitle("Preprocessing");
        mf.setVisible(true);
        mf.setResizable(false);
        
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        
            /* Raw Data Extraction */                
                    
        try
        {
            String str="";

            String qry[]={"Ramaphosa","Mabuza", "Masondo"};
            int r=(int)(Math.random()*qry.length);
            
            System.out.println("query: "+qry[r]);
            
            String quer=qry[r];
            //String quer="politics";
            
            Twitter twitter1 = new TwitterFactory().getInstance();
            Query query = new Query(quer);   // Tweets Extraction            
            query.setCount(700);
            QueryResult result = twitter1.search(query);
            for (Status status : result.getTweets())
            {                                        
                String sg=status.getText().trim();                                  
                
                //sg=removeUrl(sg);
                //sg=sg.replaceAll("[^\\w\\s\\#]","");
                
                if(!(sg.trim().equals("")))
                {
                    if(!alltweets.contains(sg.trim()))
                    {                                                
                        String time=status.getCreatedAt().toString().trim();
                        System.out.println(sg.trim());
                        str=str+ time.trim() + " --> " +"@"+  status.getUser().getScreenName() + ":" + sg+"\n\n";
                        alltweets.add(status.getUser().getScreenName()+"<-->"+sg.trim());                        
                    }
                }
            }
            String extractedTweets=str;
            jTextArea1.append(extractedTweets);
        }
        catch(Exception e)
        {
            e.printStackTrace();
        }
        
        try
        {
            String str="";

            String qry[]={"Offence","Crime", "Attack"};
            int r=(int)(Math.random()*qry.length);
            
            System.out.println("query: "+qry[r]);
            
            String quer=qry[r];
            //String quer="politics";
            
            Twitter twitter1 = new TwitterFactory().getInstance();
            Query query = new Query(quer);   // Tweets Extraction            
            query.setCount(700);
            QueryResult result = twitter1.search(query);
            for (Status status : result.getTweets())
            {                                        
                String sg=status.getText().trim();                                  
                
                //sg=removeUrl(sg);
                //sg=sg.replaceAll("[^\\w\\s\\#]","");
                
                if(!(sg.trim().equals("")))
                {
                    if(!alltweets.contains(sg.trim()))
                    {                                                
                        String time=status.getCreatedAt().toString().trim();
                        System.out.println(sg.trim());
                        str=str+ time.trim() + " --> " +"@"+  status.getUser().getScreenName() + ":" + sg+"\n\n";
                        alltweets.add(status.getUser().getScreenName()+"<-->"+sg.trim());                        
                    }
                }
            }
            String extractedTweets=str;
            jTextArea1.append(extractedTweets+"\n");
        }
        catch(Exception e)
        {
            e.printStackTrace();
        }   
        
        try
        {
            String str="";

            String qry[]={"Hate","Enmity", "Loathe"};
            int r=(int)(Math.random()*qry.length);
            
            System.out.println("query: "+qry[r]);
            
            String quer=qry[r];
            //String quer="politics";
            
            Twitter twitter1 = new TwitterFactory().getInstance();
            Query query = new Query(quer);   // Tweets Extraction            
            query.setCount(700);
            QueryResult result = twitter1.search(query);
            for (Status status : result.getTweets())
            {                                        
                String sg=status.getText().trim();                                  
                
                //sg=removeUrl(sg);
                //sg=sg.replaceAll("[^\\w\\s\\#]","");
                
                if(!(sg.trim().equals("")))
                {
                    if(!alltweets.contains(sg.trim()))
                    {                                                
                        String time=status.getCreatedAt().toString().trim();
                        System.out.println(sg.trim());
                        str=str+ time.trim() + " --> " +"@"+  status.getUser().getScreenName() + ":" + sg+"\n\n";
                        alltweets.add(status.getUser().getScreenName()+"<-->"+sg.trim());                        
                    }
                }
            }
            String extractedTweets=str;
            jTextArea1.append(extractedTweets+"\n");
        }
        catch(Exception e)
        {
            e.printStackTrace();
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea1;
    // End of variables declaration//GEN-END:variables
}
